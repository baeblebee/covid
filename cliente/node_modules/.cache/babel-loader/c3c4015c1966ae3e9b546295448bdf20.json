{"ast":null,"code":"var _jsxFileName = \"/var/www/html/covid/cliente/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { Content, Form, List } from './styles';\nimport Table from 'react-bootstrap/Table';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        proteina: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const drugs = [{\n        \"Drug\": \"Cyclosporine\",\n        \"Score\": 5.495257\n      }, {\n        \"Drug\": \"Silicon dioxide\",\n        \"Score\": 4.674581\n      }, {\n        \"Drug\": \"Tretinoin\",\n        \"Score\": 3.508562\n      }, {\n        \"Drug\": \"Acetaminophen\",\n        \"Score\": 2.981453\n      }, {\n        \"Drug\": \"Quercetin\",\n        \"Score\": 2.841376\n      }, {\n        \"Drug\": \"Valproic acid\",\n        \"Score\": 2.837451\n      }, {\n        \"Drug\": \"Vorinostat\",\n        \"Score\": 2.700724\n      }, {\n        \"Drug\": \"Pentanal\",\n        \"Score\": 2.305889\n      }, {\n        \"Drug\": \"Methotrexate\",\n        \"Score\": 1.778386\n      }, {\n        \"Drug\": \"Entinostat\",\n        \"Score\": 1.57523\n      }, {\n        \"Drug\": \"Cupric Chloride\",\n        \"Score\": 1.489271\n      }, {\n        \"Drug\": \"Dimethyl sulfoxide\",\n        \"Score\": 1.405213\n      }, {\n        \"Drug\": \"Amiodarone\",\n        \"Score\": 1.374072\n      }, {\n        \"Drug\": \"Alfacalcidol\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Diclofenac\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Irinotecan\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Capsaicin\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Prednisolone\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Clofibrate\",\n        \"Score\": 1.211453\n      }, {\n        \"Drug\": \"Estradiol\",\n        \"Score\": 0.763172\n      }, {\n        \"Drug\": \"Fluorouracil\",\n        \"Score\": 0.620379\n      }, {\n        \"Drug\": \"Bezafibrate\",\n        \"Score\": 0.609665\n      }, {\n        \"Drug\": \"Chlorpromazine\",\n        \"Score\": 0.500128\n      }, {\n        \"Drug\": \"Atenolol\",\n        \"Score\": 0.459321\n      }, {\n        \"Drug\": \"Clonidine\",\n        \"Score\": 0.459321\n      }, {\n        \"Drug\": \"Simvastatin\",\n        \"Score\": 0.404772\n      }, {\n        \"Drug\": \"Zinc\",\n        \"Score\": 0.404772\n      }, {\n        \"Drug\": \"Ibuprofen\",\n        \"Score\": 0.363777\n      }, {\n        \"Drug\": \"Losartan\",\n        \"Score\": 0.363777\n      }, {\n        \"Drug\": \"Benazepril\",\n        \"Score\": 0.363777\n      }, {\n        \"Drug\": \"Heparin\",\n        \"Score\": 0.361411\n      }, {\n        \"Drug\": \"Ethinylestradiol\",\n        \"Score\": 0.361411\n      }, {\n        \"Drug\": \"Hydrogen peroxide\",\n        \"Score\": 0.331263\n      }, {\n        \"Drug\": \"Folic acid\",\n        \"Score\": 0.318921\n      }, {\n        \"Drug\": \"Nicotine\",\n        \"Score\": 0.289115\n      }, {\n        \"Drug\": \"Dalteparin\",\n        \"Score\": 0.289115\n      }, {\n        \"Drug\": \"Chromium\",\n        \"Score\": 0.266055\n      }, {\n        \"Drug\": \"Troglitazone\",\n        \"Score\": 0.265562\n      }, {\n        \"Drug\": \"Alitretinoin\",\n        \"Score\": 0.265562\n      }, {\n        \"Drug\": \"Bexarotene\",\n        \"Score\": 0.265562\n      }, {\n        \"Drug\": \"Formaldehyde\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Phenytoin\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Arsenic trioxide\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Copper\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Estriol\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Chorionic Gonadotropin (Human)\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Urea\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Belinostat\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Phenol\",\n        \"Score\": 0.211013\n      }, {\n        \"Drug\": \"Ursodeoxycholic acid\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Fenofibrate\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Vitamin E\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Arachidonic Acid\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Ciprofibrate\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Nitroaspirin\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Ascorbic acid\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Acetylsalicylic acid\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Niacin\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"Nandrolone decanoate\",\n        \"Score\": 0.193759\n      }, {\n        \"Drug\": \"beta-Naphthoflavone\",\n        \"Score\": 0.155136\n      }, {\n        \"Drug\": \"Progesterone\",\n        \"Score\": 0.155136\n      }, {\n        \"Drug\": \"Cisplatin\",\n        \"Score\": 0.150344\n      }, {\n        \"Drug\": \"Selenium\",\n        \"Score\": 0.078004\n      }, {\n        \"Drug\": \"Phenobarbital\",\n        \"Score\": 0.078004\n      }, {\n        \"Drug\": \"Norethisterone\",\n        \"Score\": 0.072296\n      }, {\n        \"Drug\": \"Aminocaproic acid\",\n        \"Score\": 0.072296\n      }, {\n        \"Drug\": \"Prednisone\",\n        \"Score\": 0.072296\n      }, {\n        \"Drug\": \"Antimony\",\n        \"Score\": 0.072296\n      }];\n      const data = new FormData();\n      let flag = 0;\n      drugs.forEach(async drug => {\n        if (drug.Drug === this.state.proteina) {\n          data.append('proteina', this.state.proteina);\n          data.append('score', drug.Score);\n          flag = 1;\n\n          try {\n            await api.post(`/pesquisas/`, data);\n            this.setState({\n              change: this.state.change + 1,\n              proteina: ''\n            });\n            toast.success('Pesquisa realizada com sucesso!');\n          } catch (error) {\n            toast.error('Erro na comunicação com o servidor!');\n          }\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n\n      if (flag == 0) {\n        toast.error('Nenhuma pesquisa encontrada!');\n      }\n    };\n\n    this.remover = async id => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        await api.delete(`/pesquisas/${id}`);\n        this.setState({\n          change: this.state.change + 1,\n          proteina: ''\n        });\n        toast.success('Pesquisa apagada com sucesso!');\n      } catch (error) {\n        toast.error('Falha ao remover pesquisa!');\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      token: '',\n      id: '',\n      proteina: '',\n      pesquisas: [],\n      loading: false,\n      change: 0\n    };\n  }\n\n  async componentDidMount() {\n    const token = localStorage.getItem('token');\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    const id = localStorage.getItem('id');\n    this.setState({\n      token,\n      id\n    });\n\n    try {\n      const response = await api.get(`/pesquisas/`);\n      this.setState({\n        pesquisas: response.data\n      });\n    } catch (error) {\n      toast.error('Erro na comunicação com o servidor');\n    }\n  }\n\n  async componentDidUpdate(_, prevState) {\n    if (prevState.change !== this.state.change) {\n      try {\n        const response = await api.get(`/pesquisas/`);\n        this.setState({\n          pesquisas: response.data\n        });\n      } catch (error) {\n        toast.error('Erro na comunicação com o servidor');\n      }\n    }\n  }\n\n  render() {\n    const {\n      id,\n      proteina,\n      pesquisas,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Pesquisar\",\n      name: \"proteina\",\n      required: true,\n      onChange: this.handleInputChange,\n      value: proteina,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, loading ? 'Carregando...' : 'Pesquisar'))), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Prote\\xEDna\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"Data e Hora\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Excluir\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, pesquisas.map(pesquisa => /*#__PURE__*/React.createElement(\"tr\", {\n      key: pesquisa.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, pesquisa.proteina), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, pesquisa.score), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"DD/MM/YYYY HH:mm:ss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, pesquisa.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, parseInt(id) === pesquisa.user.id && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"remover\",\n      type: \"button\",\n      onClick: () => this.remover(pesquisa.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/covid/cliente/src/pages/Main/index.js"],"names":["React","Component","api","toast","Moment","FaTrashAlt","Content","Form","List","Table","Main","constructor","props","handleInputChange","e","setState","proteina","target","value","handleSubmit","preventDefault","loading","drugs","data","FormData","flag","forEach","drug","Drug","state","append","Score","post","change","success","error","remover","id","delete","token","pesquisas","componentDidMount","localStorage","getItem","defaults","headers","Authorization","response","get","componentDidUpdate","_","prevState","render","map","pesquisa","score","created_at","parseInt","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { Content, Form, List } from './styles';\nimport Table from 'react-bootstrap/Table'\n\n\nexport default class Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: '',\n            id: '',\n            proteina: '',\n            pesquisas: [],\n            loading: false,\n            change: 0\n        };\n    }\n    async componentDidMount() {\n        const token = localStorage.getItem('token');\n        api.defaults.headers.Authorization = `Bearer ${token}`;\n\n        const id = localStorage.getItem('id');\n        this.setState({ token, id });\n\n        try {\n            const response = await api.get(`/pesquisas/`);\n            this.setState({ pesquisas: response.data });\n        } catch (error) {\n            toast.error('Erro na comunicação com o servidor');\n        }\n    }\n\n    async componentDidUpdate(_, prevState) {\n        if (prevState.change !== this.state.change) {\n            try {\n                const response = await api.get(`/pesquisas/`);\n                this.setState({ pesquisas: response.data });\n            } catch (error) {\n                toast.error('Erro na comunicação com o servidor');\n            }\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({ proteina: e.target.value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        const drugs = [{ \"Drug\": \"Cyclosporine\", \"Score\": 5.495257 }, { \"Drug\": \"Silicon dioxide\", \"Score\": 4.674581 }, { \"Drug\": \"Tretinoin\", \"Score\": 3.508562 }, { \"Drug\": \"Acetaminophen\", \"Score\": 2.981453 }, { \"Drug\": \"Quercetin\", \"Score\": 2.841376 }, { \"Drug\": \"Valproic acid\", \"Score\": 2.837451 }, { \"Drug\": \"Vorinostat\", \"Score\": 2.700724 }, { \"Drug\": \"Pentanal\", \"Score\": 2.305889 }, { \"Drug\": \"Methotrexate\", \"Score\": 1.778386 }, { \"Drug\": \"Entinostat\", \"Score\": 1.57523 }, { \"Drug\": \"Cupric Chloride\", \"Score\": 1.489271 }, { \"Drug\": \"Dimethyl sulfoxide\", \"Score\": 1.405213 }, { \"Drug\": \"Amiodarone\", \"Score\": 1.374072 }, { \"Drug\": \"Alfacalcidol\", \"Score\": 1.211453 }, { \"Drug\": \"Diclofenac\", \"Score\": 1.211453 }, { \"Drug\": \"Irinotecan\", \"Score\": 1.211453 }, { \"Drug\": \"Capsaicin\", \"Score\": 1.211453 }, { \"Drug\": \"Prednisolone\", \"Score\": 1.211453 }, { \"Drug\": \"Clofibrate\", \"Score\": 1.211453 }, { \"Drug\": \"Estradiol\", \"Score\": 0.763172 }, { \"Drug\": \"Fluorouracil\", \"Score\": 0.620379 }, { \"Drug\": \"Bezafibrate\", \"Score\": 0.609665 }, { \"Drug\": \"Chlorpromazine\", \"Score\": 0.500128 }, { \"Drug\": \"Atenolol\", \"Score\": 0.459321 }, { \"Drug\": \"Clonidine\", \"Score\": 0.459321 }, { \"Drug\": \"Simvastatin\", \"Score\": 0.404772 }, { \"Drug\": \"Zinc\", \"Score\": 0.404772 }, { \"Drug\": \"Ibuprofen\", \"Score\": 0.363777 }, { \"Drug\": \"Losartan\", \"Score\": 0.363777 }, { \"Drug\": \"Benazepril\", \"Score\": 0.363777 }, { \"Drug\": \"Heparin\", \"Score\": 0.361411 }, { \"Drug\": \"Ethinylestradiol\", \"Score\": 0.361411 }, { \"Drug\": \"Hydrogen peroxide\", \"Score\": 0.331263 }, { \"Drug\": \"Folic acid\", \"Score\": 0.318921 }, { \"Drug\": \"Nicotine\", \"Score\": 0.289115 }, { \"Drug\": \"Dalteparin\", \"Score\": 0.289115 }, { \"Drug\": \"Chromium\", \"Score\": 0.266055 }, { \"Drug\": \"Troglitazone\", \"Score\": 0.265562 }, { \"Drug\": \"Alitretinoin\", \"Score\": 0.265562 }, { \"Drug\": \"Bexarotene\", \"Score\": 0.265562 }, { \"Drug\": \"Formaldehyde\", \"Score\": 0.211013 }, { \"Drug\": \"Phenytoin\", \"Score\": 0.211013 }, { \"Drug\": \"Arsenic trioxide\", \"Score\": 0.211013 }, { \"Drug\": \"Copper\", \"Score\": 0.211013 }, { \"Drug\": \"Estriol\", \"Score\": 0.211013 }, { \"Drug\": \"Chorionic Gonadotropin (Human)\", \"Score\": 0.211013 }, { \"Drug\": \"Urea\", \"Score\": 0.211013 }, { \"Drug\": \"Belinostat\", \"Score\": 0.211013 }, { \"Drug\": \"Phenol\", \"Score\": 0.211013 }, { \"Drug\": \"Ursodeoxycholic acid\", \"Score\": 0.193759 }, { \"Drug\": \"Fenofibrate\", \"Score\": 0.193759 }, { \"Drug\": \"Vitamin E\", \"Score\": 0.193759 }, { \"Drug\": \"Arachidonic Acid\", \"Score\": 0.193759 }, { \"Drug\": \"Ciprofibrate\", \"Score\": 0.193759 }, { \"Drug\": \"Nitroaspirin\", \"Score\": 0.193759 }, { \"Drug\": \"Ascorbic acid\", \"Score\": 0.193759 }, { \"Drug\": \"Acetylsalicylic acid\", \"Score\": 0.193759 }, { \"Drug\": \"Niacin\", \"Score\": 0.193759 }, { \"Drug\": \"Nandrolone decanoate\", \"Score\": 0.193759 }, { \"Drug\": \"beta-Naphthoflavone\", \"Score\": 0.155136 }, { \"Drug\": \"Progesterone\", \"Score\": 0.155136 }, { \"Drug\": \"Cisplatin\", \"Score\": 0.150344 }, { \"Drug\": \"Selenium\", \"Score\": 0.078004 }, { \"Drug\": \"Phenobarbital\", \"Score\": 0.078004 }, { \"Drug\": \"Norethisterone\", \"Score\": 0.072296 }, { \"Drug\": \"Aminocaproic acid\", \"Score\": 0.072296 }, { \"Drug\": \"Prednisone\", \"Score\": 0.072296 }, { \"Drug\": \"Antimony\", \"Score\": 0.072296 }]\n        const data = new FormData();\n        let flag = 0;\n\n        drugs.forEach(async (drug) => {\n            if (drug.Drug === this.state.proteina) {\n                data.append('proteina', this.state.proteina);\n                data.append('score', drug.Score);\n                flag = 1;\n                try {\n                    await api.post(`/pesquisas/`, data);\n                    this.setState({ change: this.state.change + 1, proteina: '' });\n                    toast.success('Pesquisa realizada com sucesso!');\n                } catch (error) {\n                    toast.error('Erro na comunicação com o servidor!');\n                }\n            }\n            this.setState({ loading: false });\n        })\n        if(flag == 0) {\n            toast.error('Nenhuma pesquisa encontrada!');\n        }\n    };\n\n    remover = async id => {\n        this.setState({ loading: true });\n        try {\n            await api.delete(`/pesquisas/${id}`);\n            this.setState({ change: this.state.change+1, proteina: ''});\n            toast.success('Pesquisa apagada com sucesso!');\n        } catch (error){\n            toast.error('Falha ao remover pesquisa!');\n        }\n        this.setState({ loading: false });\n    }\n\n    render() {\n        const { id, proteina, pesquisas, loading } = this.state;\n        return (\n            <Content>\n                <Form onSubmit={this.handleSubmit}>\n                    <textarea placeholder=\"Pesquisar\" name=\"proteina\" required\n                        onChange={this.handleInputChange} value={proteina}></textarea>\n                    <aside>\n                        <button type=\"submit\">{loading ? 'Carregando...' : 'Pesquisar'}</button>\n                    </aside>\n                </Form>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Proteína</th>\n                            <th>Score</th>\n                            <th>Data e Hora</th>\n                            <th>Excluir</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {pesquisas.map(pesquisa => (\n                            <tr key={pesquisa.id}>\n                                <td>{pesquisa.proteina}</td>\n                                <td>{pesquisa.score}</td>\n                                <td><Moment format=\"DD/MM/YYYY HH:mm:ss\">{pesquisa.created_at}</Moment></td>\n                                <td>                                \n                                    {parseInt(id) === pesquisa.user.id &&\n                                    <span>\n                                        <button id=\"remover\" type=\"button\" onClick={() => this.remover(pesquisa.id)}>\n                                            <FaTrashAlt />\n                                        </button>\n                                    </span>\n                                }</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Content>\n        );\n    }\n}   "]},"metadata":{},"sourceType":"module"}