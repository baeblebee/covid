{"ast":null,"code":"var _jsxFileName = \"/var/www/html/covid/cliente/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { Content, Form, List } from './styles';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        proteina: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const data = new FormData();\n      data.append('proteina', this.state.proteina);\n\n      try {\n        await api.post(`/pesquisas/`, data);\n        this.setState({\n          change: this.state.change + 1,\n          proteina: ''\n        });\n        toast.success('Pesquisa realizado com sucesso!');\n      } catch (error) {\n        toast.error('Falha ao realizar pesquisa!');\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.remover = async id => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        await api.delete(`/pesquisas/${id}`);\n        this.setState({\n          change: this.state.change + 1,\n          proteina: ''\n        });\n        toast.success('Pesquisa apagado com sucesso!');\n      } catch (error) {\n        toast.error('Falha ao remover pesquisa!');\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      token: '',\n      id: '',\n      proteina: '',\n      pesquisas: [],\n      loading: false,\n      change: 0\n    };\n  }\n\n  async componentDidMount() {\n    const token = localStorage.getItem('token');\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    const id = localStorage.getItem('id');\n    this.setState({\n      token,\n      id\n    });\n\n    try {\n      const response = await api.get(`/pesquisas/`);\n      this.setState({\n        pesquisas: response.data\n      });\n    } catch (error) {\n      toast.error('Erro na comunicação com o servidor');\n    }\n  }\n\n  async componentDidUpdate(_, prevState) {\n    if (prevState.change !== this.state.change) {\n      try {\n        const response = await api.get(`/pesquisas`);\n        this.setState({\n          pesquisas: response.data\n        });\n      } catch (error) {\n        toast.error('Erro na comunicação com o servidor');\n      }\n    }\n  }\n\n  render() {\n    const {\n      id,\n      proteina,\n      pesquisas,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Pesquisar\",\n      name: \"proteina\",\n      required: true,\n      onChange: this.handleInputChange,\n      value: proteina,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, loading ? 'Carregando...' : 'Pesquisar'))), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, pesquisas.map(pesquisa => /*#__PURE__*/React.createElement(\"li\", {\n      key: pesquisa.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, parseInt(id) === compra.user.id && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"remover\",\n      type: \"button\",\n      onClick: () => this.remover(compra.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"editar\",\n      type: \"button\",\n      onClick: () => this.editar(compra.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FaEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Moment, {\n      format: \"DD/MM/YYYY HH:mm:ss\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, compra.created_at)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Proteina:\"), compra.proteina), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Informa\\xE7\\xF5es:\"), compra.descricao), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Medicamentos\"), compra.valor)))));\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/covid/cliente/src/pages/Main/index.js"],"names":["React","Component","api","toast","Moment","FaTrashAlt","Content","Form","List","Main","constructor","props","handleInputChange","e","setState","proteina","target","value","handleSubmit","preventDefault","loading","data","FormData","append","state","post","change","success","error","remover","id","delete","token","pesquisas","componentDidMount","localStorage","getItem","defaults","headers","Authorization","response","get","componentDidUpdate","_","prevState","render","map","pesquisa","parseInt","compra","user","editar","created_at","descricao","valor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { Content, Form, List } from './styles';\nexport default class Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: '',\n            id: '',\n            proteina: '',\n            pesquisas: [],\n            loading: false,\n            change: 0\n        };\n    }\n    async componentDidMount() {\n        const token = localStorage.getItem('token');\n        api.defaults.headers.Authorization = `Bearer ${token}`;\n        const id = localStorage.getItem('id');\n        this.setState({ token, id});\n        try {\n            const response = await api.get(`/pesquisas/`);\n            this.setState({pesquisas: response.data });\n        }catch (error) {\n            toast.error('Erro na comunicação com o servidor');\n        }\n    }\n    async componentDidUpdate(_, prevState) {\n        if(prevState.change !== this.state.change) {\n            try {\n                const response = await api.get(`/pesquisas`);\n                this.setState({pesquisas: response.data });\n            }catch (error) {\n                toast.error('Erro na comunicação com o servidor');\n            }\n        }\n    }\n    handleInputChange = e => {\n        this.setState({ proteina: e.target.value });\n    };\n    handleSubmit = async e => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const data = new FormData();\n        data.append('proteina', this.state.proteina);\n        try {\n            await api.post(`/pesquisas/`, data);\n            this.setState({ change: this.state.change+1, proteina: '' });\n            toast.success('Pesquisa realizado com sucesso!');\n        } catch (error) {\n            toast.error('Falha ao realizar pesquisa!');\n        }\n        this.setState({ loading: false });\n    };\n    remover = async id => {\n        this.setState({ loading: true });\n        try {\n            await api.delete(`/pesquisas/${id}`);\n            this.setState({ change: this.state.change+1, proteina: ''});\n            toast.success('Pesquisa apagado com sucesso!');\n        } catch (error){\n            toast.error('Falha ao remover pesquisa!');\n        }\n        this.setState({ loading: false });\n    }\n    render() {\n        const { id, proteina, pesquisas, loading } = this.state;\n        return (\n            <Content>\n                <Form onSubmit={this.handleSubmit} method=\"POST\">\n                    <textarea placeholder=\"Pesquisar\" name=\"proteina\" required\n                    onChange={this.handleInputChange} value={proteina}></textarea>\n                    <aside>\n                        <button type=\"submit\">{loading ? 'Carregando...' : 'Pesquisar'}</button>\n                    </aside>\n                </Form>\n\n<List>\n{pesquisas.map(pesquisa => (\n    <li key={pesquisa.id}>\n        <div>\n            {parseInt(id) === compra.user.id &&\n                <span>\n                    <button id=\"remover\" type=\"button\" onClick={() => this.remover(compra.id)}>\n                        <FaTrashAlt />\n                    </button>\n                    <button id=\"editar\" type=\"button\" onClick={() => this.editar(compra.id)}>\n                        <FaEdit />\n                    </button>\n                </span>\n            }\n            <Moment format=\"DD/MM/YYYY HH:mm:ss\">{compra.created_at}</Moment>\n        </div>\n        <div>\n            <h4>Proteina:</h4>\n            {compra.proteina}\n        </div>\n        <div>\n            <h4>Informações:</h4>\n            {compra.descricao}\n        </div>\n        <div>\n            <h4>Medicamentos</h4>\n            {compra.valor}\n        </div>\n    </li>\n))}\n</List>\n</Content>\n);\n}\n}"]},"metadata":{},"sourceType":"module"}